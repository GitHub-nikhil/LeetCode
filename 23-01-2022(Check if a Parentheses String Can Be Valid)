class Solution {
public:
    bool canBeValid(string s, string locked) {
        if(s.length()%2 == 1) return false;
        int countO = 0,countC = 0,free = 0;
        for(int i = 0;i<s.length();i++){
            if(locked[i] == '0') free++;
            else if(s[i] == ')') countC++;
            else if(s[i] == '(') countO++;
            
            if(countC>countO+free) return false;
        }
        countO = countC = free = 0;
        
        for(int i = s.length()-1;i>=0;i--){
            if(locked[i] == '0') free++;
            else if(s[i] == ')') countC++;
            else if(s[i] == '(') countO++;
            
            if(countO>countC+free) return false;
        }
        
        return true;
    }
};
